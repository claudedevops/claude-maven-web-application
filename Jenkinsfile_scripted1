// a scripted Jenkinsfile
node {
    def mavenHome = tool name: 'maven3.9.4'
	stage('1.CloneCode'){
        //Jenkins running on a Linux system
        //sh "git clone https://github.com/claudedevops/maven-web-application.git"
        git "https://github.com/claudedevops/maven-web-application.git"
        //Jenkins running on a Windows system
        //bat "git clone https://github.com/claudedevops/maven-web-application.git"
    }
    stage('2.mvnBuild'){
        sh "${mavenHome}/bin/mvn clean package"
    }
    stage('3.CodeQuality'){
        sh "${mavenHome}/bin/mvn sonar:sonar"
        //edit pom.xml propertiesTAG with SonarQube server details
    }
    stage('4.UploadArtifacts'){
        sh "${mavenHome}/bin/mvn deploy"
        //edit pom.xml distributionManagement with repository details
        //edit settings.xml with nexus-user login credentials
    }
    stage('5.Deploy2UAT'){
        //use deploy-to-container plugin via pipeline syntax
        deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials1', path: '', url: 'http://3.17.149.224:8080/')], contextPath: null, war: 'target/*war'
    }
    stage('6.ManualApproval'){
        sh "echo 'Please review the application performance' "
        timeout(time:600, unit:'MINUTES') {
        input message: 'Application ready for deployment. Please review and approve'
        }
    }
    stage('7.Deploy2Prod'){
        sh "echo 'Deploy application to the customers/production' "
        deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials1', path: '', url: 'http://3.17.149.224:8080/')], contextPath: null, war: 'target/*war'
    }
    stage('8.APM'){
        //Application Monitoring
        sh "echo 'monitoring and observation and alerting' "
        sh "echo 'application performance Monitoring in progress' "
    }
    stage('9.emailNotification'){
        sh "echo 'notify the team for unusual occurrences' "
        sh "echo 'notify the team if the applications are down' "
        sh "echo 'notify the team if the latency is higher than expected' "
        emailext body: '''Hi Team,

The build and deployment status for tesla-pipeline follows.

Regards,
Claude Eke''', recipientProviders: [buildUser(), contributor(), developers(), requestor()], subject: 'build and deployment status', to: 'claude.eke77@gmail.com'
    }
}
